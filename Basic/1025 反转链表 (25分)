#include<iostream>
#include<string>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;
struct node{
	string addr;
	int data;
	string next;
};
int main()
{
    map<string,node>m;
	string init_addr;
	int total_num,rev_num;
	cin>>init_addr>>total_num>>rev_num;
	string temp_addr;
	for(auto i=0;i<total_num;i++)
	{
		cin>>temp_addr;
		m[temp_addr].addr=temp_addr;
		cin>>m[temp_addr].data>>m[temp_addr].next;
	}
	vector<node>v;
	temp_addr=init_addr;
	while(temp_addr!="-1"){
		v.push_back(m[temp_addr]);
		temp_addr=m[temp_addr].next;
	}
	int temp_total_num=0;
	total_num=v.size();
	while(total_num-temp_total_num>=rev_num)
	{
		reverse(v.begin()+temp_total_num,v.begin()+temp_total_num+rev_num);
		temp_total_num+=rev_num;
	}
	for(int i=0;i<v.size();i++)
	{
		if(i==0)printf("%s %d",v[i].addr.c_str(),v[i].data);
		else printf(" %s\n%s %d",v[i].addr.c_str(),v[i].addr.c_str(),v[i].data);
	}
	printf(" -1");
    return 0;
}
